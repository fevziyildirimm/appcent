{"ast":null,"code":"var _jsxFileName = \"/home/fy/Videos/appcent/src/MovieInfo.js\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport YouTube from \"react-youtube\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Div = styled.div`\n  box-sizing: border-box;\n\n  .background {\n    width: 100%;\n    height: 60vh;\n    position: absolute;\n    overflow: hidden;\n  }\n  .backdrop {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: -1;\n    overflow: hidden;\n    object-fit: cover;\n    object-position: center;\n    \n  }\n  .poster {\n    height: 400px;\n    margin: 40px;\n    border: 5px solid white;\n  }\n  .info {\n    display: flex;\n    color: white;\n    width: 100%;\n    height: 70vh;\n    justify-content: center;\n    z-index:100;\n  }\n  .detail-poster{\n    display:flex;\n    flex-direction:column;\n    align-items:center\n\n  }\n  .content-info{\n    flex:1;\n    margin-top:40px;\n    z-index:100;\n\n  }\n`;\n_c = Div;\nexport class MovieInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: [],\n      trailer: []\n    };\n  }\n\n  async getTrailer() {\n    await fetch(\"https://api.themoviedb.org/3/movie/\" + this.props.id + \"/videos?api_key=c377a4de61abbc33e2fbb5bc071c6537&language=en-US\").then(data => data.json()).then(data => this.setState({\n      trailer: data.results\n    }));\n    console.log(this.state.trailer);\n  }\n\n  async componentDidMount() {\n    await fetch(\"https://api.themoviedb.org/3/movie/\" + this.props.id + \"?api_key=c377a4de61abbc33e2fbb5bc071c6537&language=en-US\").then(response => response.json()).then(data => {\n      this.setState({\n        movie: data\n      });\n    });\n    await this.getTrailer();\n  }\n\n  _onReady(event) {\n    event.target.pauseVideo();\n  }\n\n  render() {\n    const opts = {\n      height: 300,\n      width: 500,\n      playerVars: {\n        autoplay: 0\n      }\n    };\n    const {\n      poster_path,\n      backdrop_path,\n      title,\n      overview,\n      genres\n    } = this.state.movie;\n    return /*#__PURE__*/_jsxDEV(Div, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background\",\n        children: backdrop_path && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://image.tmdb.org/t/p/w1280/\" + backdrop_path,\n          alt: \"img\",\n          className: \"backdrop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-poster\",\n          children: [poster_path && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://image.tmdb.org/t/p/w500/\" + poster_path,\n            className: \"poster\",\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: genres && this.state.movie.genres.map((genre, key) => genre.name + \",\"\n            /* + (key!=genres.lenght&& \",\")  */\n            )\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: this.state.trailer ? this.state.trailer.length ? this.state.trailer[0].key : \"-\" : \"-\",\n          opts: opts,\n          onReady: this._onReady\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default MovieInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Div\");","map":{"version":3,"sources":["/home/fy/Videos/appcent/src/MovieInfo.js"],"names":["React","Component","styled","YouTube","Div","div","MovieInfo","state","movie","trailer","getTrailer","fetch","props","id","then","data","json","setState","results","console","log","componentDidMount","response","_onReady","event","target","pauseVideo","render","opts","height","width","playerVars","autoplay","poster_path","backdrop_path","title","overview","genres","map","genre","key","name","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport YouTube from \"react-youtube\";\n\nconst Div = styled.div`\n  box-sizing: border-box;\n\n  .background {\n    width: 100%;\n    height: 60vh;\n    position: absolute;\n    overflow: hidden;\n  }\n  .backdrop {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: -1;\n    overflow: hidden;\n    object-fit: cover;\n    object-position: center;\n    \n  }\n  .poster {\n    height: 400px;\n    margin: 40px;\n    border: 5px solid white;\n  }\n  .info {\n    display: flex;\n    color: white;\n    width: 100%;\n    height: 70vh;\n    justify-content: center;\n    z-index:100;\n  }\n  .detail-poster{\n    display:flex;\n    flex-direction:column;\n    align-items:center\n\n  }\n  .content-info{\n    flex:1;\n    margin-top:40px;\n    z-index:100;\n\n  }\n`;\nexport class MovieInfo extends Component {\n  state = {\n    movie: [],\n    trailer:[]\n  };\n async getTrailer(){\nawait fetch(\"https://api.themoviedb.org/3/movie/\"+this.props.id+\"/videos?api_key=c377a4de61abbc33e2fbb5bc071c6537&language=en-US\")\n.then(data=>data.json())\n.then(data=>this.setState({trailer:data.results}))\nconsole.log(this.state.trailer);\n\n  }\n  async componentDidMount() {\n    await fetch(\n      \"https://api.themoviedb.org/3/movie/\" +\n        this.props.id +\n        \"?api_key=c377a4de61abbc33e2fbb5bc071c6537&language=en-US\"\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ movie: data });\n      });\n     await this.getTrailer()\n  }\n  _onReady(event) {\n    event.target.pauseVideo();\n  }\n\n  render() {\n\n    const opts = {\n      height:300,\n      width: 500,\n      playerVars: {\n        autoplay: 0,\n      },\n    };\n    const { poster_path, backdrop_path, title, overview,genres } = this.state.movie;\n    return (\n      <Div>\n        <div className=\"background\">\n          {backdrop_path&&<img\n            src={\"http://image.tmdb.org/t/p/w1280/\" + backdrop_path}\n            alt=\"img\"\n            className=\"backdrop\"\n          />}\n        </div>\n        <div className=\"info\">\n          <div className=\"detail-poster\">\n            {poster_path&& <img\n              src={\"https://image.tmdb.org/t/p/w500/\" + poster_path}\n              className=\"poster\"\n              alt=\"img\"\n            />}\n            <span>\n\n            {genres&&this.state.movie.genres.map((genre,key)=>\n(            genre.name+\",\" /* + (key!=genres.lenght&& \",\")  */\n)            )}\n         </span>\n          </div>\n          <div className=\"content-info\">\n            <h1>{title}</h1>\n            <h4>{overview}</h4>\n          \n          </div>\n          <YouTube\n                    videoId={\n                      this.state.trailer\n                        ? this.state.trailer.length\n                          ? this.state.trailer[0].key\n                          : \"-\"\n                        : \"-\"\n                    }\n                    opts={opts}\n                    onReady={this._onReady}\n                  />\n        </div>\n      </Div>\n    );\n  }\n}\n\nexport default MovieInfo;\n"]},"metadata":{},"sourceType":"module"}