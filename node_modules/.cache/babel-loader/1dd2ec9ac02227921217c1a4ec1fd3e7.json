{"ast":null,"code":"var _jsxFileName = \"/home/fy/Videos/appcent/src/Pages/MovieInfo.js\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport YouTube from \"react-youtube\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Div = styled.div`\n\n  box-sizing: border-box;\n\n  .background {\n    width: 100%;\n    height: 60vh;\n    position: absolute;\n    overflow: hidden;\n    background: linear-gradient(to bottom, #000, transparent, #000);\n  }\n\n  .backdrop {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: -1;\n    overflow: hidden;\n    object-fit: cover;\n    object-position: center;\n  }\n  .poster {\n    height: 400px;\n    margin: 40px 40px 20px 40px;\n    border: 5px solid white;\n    z-index: 1;\n  }\n  .info {\n    display: flex;\n    color: white;\n    width: 100%;\n    height: 70vh;\n    justify-content: center;\n    z-index: 100;\n  }\n  p {\n    padding: 20px 0;\n  }\n  .detail-poster {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    z-index: 100;\n  }\n  .content-info {\n    width: 50%;\n    margin-top: 40px;\n    z-index: 100;\n  }\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n@media (max-width:500px){\n  .info{display:flex;\n  flex-direction:column;\nwidth:100%;\nalign-items:center}\n  .category{display:none}\n  .poster {\n    height: 300px;\n    border: 5px solid white;\n    z-index: 1;\n  }\n.main{display:flex}\n}\n`;\n_c = Div;\nexport class MovieInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: [],\n      trailer: []\n    };\n  }\n\n  async getTrailer() {\n    await fetch(\"https://api.themoviedb.org/3/movie/\" + this.props.id + \"/videos?api_key=c377a4de61abbc33e2fbb5bc071c6537&language=en-US\").then(data => data.json()).then(data => this.setState({\n      trailer: data.results\n    }));\n    console.log(this.state.trailer);\n  }\n\n  async componentDidMount() {\n    await fetch(\"https://api.themoviedb.org/3/movie/\" + this.props.id + \"?api_key=c377a4de61abbc33e2fbb5bc071c6537&language=en-US\").then(response => response.json()).then(data => {\n      this.setState({\n        movie: data\n      });\n    });\n    await this.getTrailer();\n  }\n\n  _onReady(event) {\n    event.target.pauseVideo();\n  }\n\n  render() {\n    const opts = {\n      height: 300,\n      width: 500,\n      playerVars: {\n        autoplay: 0\n      }\n    };\n    const {\n      poster_path,\n      backdrop_path,\n      title,\n      overview,\n      genres\n    } = this.state.movie;\n    return /*#__PURE__*/_jsxDEV(Div, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background\",\n        children: backdrop_path && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://image.tmdb.org/t/p/w1280/\" + backdrop_path,\n          alt: \"img\",\n          className: \"backdrop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-poster\",\n            children: [poster_path && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://image.tmdb.org/t/p/w500/\" + poster_path,\n              className: \"poster\",\n              alt: \"img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Categories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 15\n              }, this), genres && this.state.movie.genres.map((genre, key) => genre.name + \",\"\n              /* + (key!=genres.lenght&& \",\")  */\n              )]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n            videoId: this.state.trailer ? this.state.trailer.length ? this.state.trailer[0].key : \"-\" : \"-\",\n            opts: opts,\n            onReady: this._onReady\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default MovieInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Div\");","map":{"version":3,"sources":["/home/fy/Videos/appcent/src/Pages/MovieInfo.js"],"names":["React","Component","styled","YouTube","Div","div","MovieInfo","state","movie","trailer","getTrailer","fetch","props","id","then","data","json","setState","results","console","log","componentDidMount","response","_onReady","event","target","pauseVideo","render","opts","height","width","playerVars","autoplay","poster_path","backdrop_path","title","overview","genres","map","genre","key","name","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport YouTube from \"react-youtube\";\n\nconst Div = styled.div`\n\n  box-sizing: border-box;\n\n  .background {\n    width: 100%;\n    height: 60vh;\n    position: absolute;\n    overflow: hidden;\n    background: linear-gradient(to bottom, #000, transparent, #000);\n  }\n\n  .backdrop {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: -1;\n    overflow: hidden;\n    object-fit: cover;\n    object-position: center;\n  }\n  .poster {\n    height: 400px;\n    margin: 40px 40px 20px 40px;\n    border: 5px solid white;\n    z-index: 1;\n  }\n  .info {\n    display: flex;\n    color: white;\n    width: 100%;\n    height: 70vh;\n    justify-content: center;\n    z-index: 100;\n  }\n  p {\n    padding: 20px 0;\n  }\n  .detail-poster {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    z-index: 100;\n  }\n  .content-info {\n    width: 50%;\n    margin-top: 40px;\n    z-index: 100;\n  }\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n@media (max-width:500px){\n  .info{display:flex;\n  flex-direction:column;\nwidth:100%;\nalign-items:center}\n  .category{display:none}\n  .poster {\n    height: 300px;\n    border: 5px solid white;\n    z-index: 1;\n  }\n.main{display:flex}\n}\n`;\nexport class MovieInfo extends Component {\n  state = {\n    movie: [],\n    trailer: [],\n  };\n  async getTrailer() {\n    await fetch(\n      \"https://api.themoviedb.org/3/movie/\" +\n        this.props.id +\n        \"/videos?api_key=c377a4de61abbc33e2fbb5bc071c6537&language=en-US\"\n    )\n      .then((data) => data.json())\n      .then((data) => this.setState({ trailer: data.results }));\n    console.log(this.state.trailer);\n  }\n  async componentDidMount() {\n    await fetch(\n      \"https://api.themoviedb.org/3/movie/\" +\n        this.props.id +\n        \"?api_key=c377a4de61abbc33e2fbb5bc071c6537&language=en-US\"\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ movie: data });\n      });\n    await this.getTrailer();\n  }\n  _onReady(event) {\n    event.target.pauseVideo();\n  }\n\n  render() {\n    const opts = {\n      height: 300,\n      width: 500,\n      playerVars: {\n        autoplay: 0,\n      },\n    };\n    const { poster_path, backdrop_path, title, overview, genres } =\n      this.state.movie;\n    return (\n      <Div>\n        <div className=\"background\">\n          {backdrop_path && (\n            <img\n              src={\"http://image.tmdb.org/t/p/w1280/\" + backdrop_path}\n              alt=\"img\"\n              className=\"backdrop\"\n            />\n          )}\n        </div>\n        <div className=\"info\">\n          <div className=\"main\">\n\n          \n          <div className=\"detail-poster\">\n            {poster_path && (\n              <img\n                src={\"https://image.tmdb.org/t/p/w500/\" + poster_path}\n                className=\"poster\"\n                alt=\"img\"\n              />\n            )}\n            <span className=\"category\">\n              <h2>Categories</h2>\n              {genres &&\n                this.state.movie.genres.map(\n                  (genre, key) =>\n                    genre.name + \",\" /* + (key!=genres.lenght&& \",\")  */\n                )}\n            </span>\n          </div>\n          <div className=\"content-info\">\n            <h2>{title}</h2>\n            <p>{overview}</p>\n            </div>  \n            <YouTube\n              videoId={\n                this.state.trailer\n                  ? this.state.trailer.length\n                    ? this.state.trailer[0].key\n                    : \"-\"\n                  : \"-\"\n              }\n              opts={opts}\n              onReady={this._onReady}\n            />\n          </div>\n        </div>\n      </Div>\n    );\n  }\n}\n\nexport default MovieInfo;\n"]},"metadata":{},"sourceType":"module"}